user  www www;

worker_processes  2;

pid /var/run/nginx.pid;

error_log  /var/log/nginx.error_log  info;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    upstream backend {
        server app1:8000;
        server app2:8000;
        server app3:8000;
    }

    upstream auth {
        server auth:8000;       # External authentication service
    }

    server {
        listen 80;
        server_name localhost;

        # include /etc/nginx/snippets/cors.conf;

        location / {
            proxy_pass http://backend;
        }

        # secured route to users using auth service
        location /users {

            include /etc/nginx/snippets/cors.conf;

            # Delegate JWT validation to auth service
            auth_request /auth;

            proxy_pass http://backend/users;
            proxy_pass_request_headers off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header X-Request-ID $http_x_request_id;
            client_max_body_size 50M;

        }

        location /health {
            proxy_pass http://backend/health;
        }

        location /ws {
            proxy_pass http://backend/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host; # pass through the host header
        }

        location /auth {
            internal;
            proxy_pass http://auth;
            proxy_set_header Content-Length "";
            proxy_pass_request_headers off;
            proxy_pass_request_body off;
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;
            proxy_set_header X-Request-ID $http_x_request_id;
        }
    }
}
